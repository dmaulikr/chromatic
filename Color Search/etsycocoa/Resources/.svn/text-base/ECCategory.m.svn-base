//
//  ECCategory.m
//  Etsy Cocoa, Version 2.0
//
//  http://etsycocoa.googlecode.com/
//
//  Copyright (c) 2011, Eternity Technologies.
//  All rights reserved.
// 
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are met:
//
//    * Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//    * Neither the name of the Eternity Technologies nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//  THIS SOFTWARE IS PROVIDED BY ETERNITY TECHNOLOGIES ''AS IS'' AND ANY
//  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
//  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
//  DISCLAIMED. IN NO EVENT SHALL ETERNITY TECHNOLOGIES BE LIABLE FOR ANY
//  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
//  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

#import "ECCategory.h"

@implementation ECCategory

@synthesize metaTitle;
@synthesize metaKeywords;
@synthesize metaDescription;
@synthesize pageDescription;
@synthesize pageTitle;
@synthesize categoryName;
@synthesize shortName;
@synthesize longName;
@synthesize numChildren;

- (id) init {
	self = [super init];
	if (self) {
		self.metaTitle = nil;
		self.metaKeywords = nil;
		self.metaDescription = nil;
		self.pageDescription = nil;
		self.pageTitle = nil;
		self.categoryName = nil;
		self.shortName = nil;
		self.longName = nil;
		self.numChildren = -1;
	}
	return self;
}

- (id) initWithJSONString:(id) jsonString {
	self = [super init];
	if (self) {
		self.metaTitle = [self stringOrNilFromJSONObject:jsonString jsonKey:@"meta_title"];
		self.metaKeywords = [self stringOrNilFromJSONObject:jsonString jsonKey:@"meta_keywords"];
		self.metaDescription = [self stringOrNilFromJSONObject:jsonString jsonKey:@"meta_description"];
		self.pageDescription = [self stringOrNilFromJSONObject:jsonString jsonKey:@"page_description"];
		self.pageTitle = [self stringOrNilFromJSONObject:jsonString jsonKey:@"page_title"];
		self.categoryName = [self stringOrNilFromJSONObject:jsonString jsonKey:@"category_name"];
		self.shortName = [self stringOrNilFromJSONObject:jsonString jsonKey:@"short_name"];
		self.longName = [self stringOrNilFromJSONObject:jsonString jsonKey:@"long_name"];
		self.numChildren = [self integerOrNilFromJSONObject:jsonString jsonKey:@"num_children"];
	}
	return self;
}

- (void) dealloc {
	[metaTitle release];
	[metaKeywords release];
	[metaDescription release];
	[pageDescription release];
	[pageTitle release];
	[categoryName release];
	[shortName release];
	[longName release];
	[super dealloc];
}

@end
