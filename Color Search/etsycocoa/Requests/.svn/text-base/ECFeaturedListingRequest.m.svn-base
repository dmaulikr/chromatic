//
//  ECFeaturedListingRequest.m
//  Etsy Cocoa, Version 2.0
//
//  http://etsycocoa.googlecode.com/
//
//  Copyright (c) 2011, Eternity Technologies.
//  All rights reserved.
// 
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are met:
//
//    Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//    Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//    Neither the name of the Eternity Technologies nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//  THIS SOFTWARE IS PROVIDED BY ETERNITY TECHNOLOGIES ''AS IS'' AND ANY
//  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
//  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
//  DISCLAIMED. IN NO EVENT SHALL ETERNITY TECHNOLOGIES BE LIABLE FOR ANY
//  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
//  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

#import "ECFeaturedListingRequest.h"

#import "ECFeaturedListing.h"
#import "ECFeaturedListingFilter.h"

@implementation ECFeaturedListingRequest



/*!
 @function findAllFeaturedListingRequest
 @abstract Finds all FeaturedListings regardless of Listing state.
 @discussion GET - /homepages/listings/
 */

+ (ECRequest *) findAllFeaturedListingRequest:(NSInteger) limit 
									   offset:(NSInteger) offset
									   filter:(ECFeaturedListingFilter *) filter
{
	ECRequest *request = [[[ECRequest alloc] init] autorelease];
	request.httpMethod = ECHTTPMethodGET;
	request.parserClass = [ECFeaturedListing class];
	request.partialURL = @"/homepages/listings";
	request.identifier = @"findAllFeaturedListing";

	request.filter = filter;
	
	if(limit != ECLimitDefault) [request setParamValue:[NSString stringWithFormat:@"%i", limit] forKey:@"limit"];
	if(offset != ECOffsetDefault) [request setParamValue:[NSString stringWithFormat:@"%i", offset] forKey:@"offset"];

	return request;
}

/*!
 @function getFeaturedListingRequest
 @abstract Retrieves a FeaturedListing by id.
 @discussion GET - /homepages/listings/:featured_listing_id
 */

+ (ECRequest *) getFeaturedListingRequest:(NSArray *) featuredListingIds
								   filter:(ECFeaturedListingFilter *) filter
{
	ECRequest *request = [[[ECRequest alloc] init] autorelease];
	request.httpMethod = ECHTTPMethodGET;
	request.parserClass = [ECFeaturedListing class];
	request.partialURL = @"/homepages/listings/active";
	request.identifier = @"findAllFeaturedListingPickerFeatured";
	
	request.filter = filter;
	
	if(featuredListingIds) [request setParamValue:featuredListingIds forKey:@"featured_listing_ids"];
	
	return request;
}

/*!
 @function findAllFeaturedListingActiveRequest
 @abstract Finds all FeaturedListings that point to active Listings.
 @discussion GET - /homepages/listings/active
 */

+ (ECRequest *) findAllFeaturedListingActive:(NSInteger) limit 
									  offset:(NSInteger) offset
									  filter:(ECFeaturedListingFilter *) filter
{
	ECRequest *request = [[[ECRequest alloc] init] autorelease];
	request.httpMethod = ECHTTPMethodGET;
	request.parserClass = [ECFeaturedListing class];
	request.partialURL = @"/homepages/listings/active";
	request.identifier = @"findAllFeaturedListingPickerFeatured";
	
	request.filter = filter;
	
	if(limit != ECLimitDefault) [request setParamValue:[NSString stringWithFormat:@"%i", limit] forKey:@"limit"];
	if(offset != ECOffsetDefault) [request setParamValue:[NSString stringWithFormat:@"%i", offset] forKey:@"offset"];
	
	return request;
}

/*!
 @function findAllFeaturedListingPickerFeaturedRequest
 @abstract Retrieves a set of FeaturedListingPicker objects associated to a FeaturedListing.
 @discussion GET - /homepages/listings/:featured_listing_id/picker
 */

+ (ECRequest *) findAllFeaturedListingPickerFeaturedRequest:(NSInteger) featuredListingPickerId 
													  limit:(NSInteger) limit 
													 offset:(NSInteger) offset
													 filter:(ECFeaturedListingFilter *) filter
{
	ECRequest *request = [[[ECRequest alloc] init] autorelease];
	request.httpMethod = ECHTTPMethodGET;
	request.parserClass = [ECFeaturedListing class];
	request.partialURL = [NSString stringWithFormat:@"/homepages/listings/%i/picker", featuredListingPickerId];
	request.identifier = @"findAllFeaturedListingPickerFeatured";
	
	request.filter = filter;
	
	if(limit != ECLimitDefault) [request setParamValue:[NSString stringWithFormat:@"%i", limit] forKey:@"limit"];
	if(offset != ECOffsetDefault) [request setParamValue:[NSString stringWithFormat:@"%i", offset] forKey:@"offset"];
	
	return request;
}

@end
