//
//  ECResponse.h
//  Etsy Cocoa, Version 2.0
//
//  http://etsycocoa.googlecode.com/
//
//  Copyright (c) 2011, Eternity Technologies.
//  All rights reserved.
// 
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are met:
//
//    * Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//    * Neither the name of the Eternity Technologies nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//  THIS SOFTWARE IS PROVIDED BY ETERNITY TECHNOLOGIES ''AS IS'' AND ANY
//  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
//  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
//  DISCLAIMED. IN NO EVENT SHALL ETERNITY TECHNOLOGIES BE LIABLE FOR ANY
//  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
//  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

#import <Foundation/Foundation.h>

#import "ECAPIProtocols.h"

@class BCResponse;

/**
 * BCResponseDelegate is implemented by a class that wishes to revieve callbacks
 * from BCAPIClient when the request has either finished loading or failed. It calls
 * one of two messages depending on the result.
 *
 * Each delegate method is passed an object of BCResponse which contains information
 * about the request and the parsed data.
 *
 */

@class ECResponse;

@interface ECResponse : NSObject {

	NSString							*identifier;
	NSMutableData						*responseData;
	
	NSInteger							httpStatusCode;
	NSString							*statusMessage;
	
	Class								parserClass;
	
	id<NSObject, ECResponseDelegate>	delegate;
	id									parsedResponse;		// This property is auto released

}

@property (nonatomic, readonly) NSInteger httpStatusCode;
@property (nonatomic, readonly) NSString *statusMessage;

@property (nonatomic, assign) Class parserClass;
@property (nonatomic, copy) NSString *identifier;

@property (nonatomic, retain) id<NSObject, ECResponseDelegate> delegate;
@property (nonatomic, readonly) id parsedResponse;

@end
