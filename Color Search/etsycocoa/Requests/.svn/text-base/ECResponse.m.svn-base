//
//  ECResponse.m
//  Etsy Cocoa, Version 2.0
//
//  http://etsycocoa.googlecode.com/
//
//  Copyright (c) 2011, Eternity Technologies.
//  All rights reserved.
// 
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are met:
//
//    * Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//    * Neither the name of the Eternity Technologies nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//  THIS SOFTWARE IS PROVIDED BY ETERNITY TECHNOLOGIES ''AS IS'' AND ANY
//  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
//  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
//  DISCLAIMED. IN NO EVENT SHALL ETERNITY TECHNOLOGIES BE LIABLE FOR ANY
//  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
//  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

#import "ECResponse.h"
#import "JSON.h"

@implementation ECResponse

@synthesize httpStatusCode;
@synthesize statusMessage;

@synthesize delegate;
@synthesize identifier;

@synthesize parserClass;
@synthesize parsedResponse;

- (id) init {
	self = [super init];
	if(self) {
		identifier = nil;
		responseData = [[NSMutableData alloc] init];
		parsedResponse = nil;
		statusMessage = nil;
	}
	return self;
}

- (void) dealloc {
	[statusMessage release];
	[identifier release];
	[responseData release];
	[delegate release];
	[super dealloc];
}

#pragma mark -
#pragma mark NSURLConnection delegate

- (void) connection:(NSURLConnection *)connection didReceiveResponse:(NSHTTPURLResponse *)response {
	httpStatusCode = [response statusCode];
}

- (void) connection:(NSURLConnection *)connection didReceiveData:(NSData *)data {
	[responseData appendData:data];
}

- (void) connectionDidFinishLoading:(NSURLConnection *)connection {

	NSLog(@"[ECResponse/connectionDidFinishLoading/%@] Status Code %i, Response is %i characters long", identifier, httpStatusCode, [responseData length]);

	if(httpStatusCode == 200 || httpStatusCode == 201) {
		NSString *outputString = [[NSString alloc] initWithData:responseData encoding:NSASCIIStringEncoding];
		
		NSError *jsonParseError;
		SBJsonParser *jsonParser = [[SBJsonParser alloc] init];
		id jsonObject = [jsonParser objectWithString:outputString error:&jsonParseError];
		[outputString release];
		
		parsedResponse = [[parserClass class] parseProtocolJSONResponse:[jsonObject valueForKey:@"results"]];
		[delegate etsyAPIRequestFinishedWithResponse:self];
		
		jsonObject = nil;
		[jsonParser release];		
	}
	else {
		NSString *outputString = [[NSString alloc] initWithData:responseData encoding:NSASCIIStringEncoding];
		[statusMessage release];
		statusMessage = [outputString retain];
		[outputString release];
	}
	
}

- (void) connection:(NSURLConnection *)connection didFailWithError:(NSError *)error {
	
	NSLog(@"[ECResponse/didFailWithError/%@] Status Code %i, Response is %i characters long", identifier, httpStatusCode, [responseData length]);

	NSString *outputString = [[NSString alloc] initWithData:responseData encoding:NSASCIIStringEncoding];
	[statusMessage release];
	statusMessage = [outputString retain];
	[outputString release];

	[delegate etsyAPIRequestFailedWithResponse:self];
}

@end
